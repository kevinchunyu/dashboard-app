{"version":3,"file":"digest.js","sourceRoot":"","sources":["../../../src/utils/digest.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,MAAM,MAAM,QAAQ,CAAC;AAM5B,MAAM,UAAU,eAAe,CAAC,cAA8C;IAC5E,MAAM,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACzC,IAAI,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;QACnC,OAAO,OAAO,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;KAC/E;SAAM;QACL,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,cAAc,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;gBAC5B,IAAI,CAAC,GAAG,EAAE,CAAC;gBACX,OAAO,CAAC,UAAU,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;YACH,cAAc,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;KACJ;AACH,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport crypto from \"crypto\";\n\nexport function calculateDigest(buffer: Buffer): Promise<string>;\n\nexport function calculateDigest(stream: NodeJS.ReadableStream): Promise<string>;\n\nexport function calculateDigest(bufferOrStream: NodeJS.ReadableStream | Buffer): Promise<string> {\n  const hash = crypto.createHash(\"sha256\");\n  if (Buffer.isBuffer(bufferOrStream)) {\n    return Promise.resolve(`sha256:${hash.update(bufferOrStream).digest(\"hex\")}`);\n  } else {\n    bufferOrStream.pipe(hash);\n    return new Promise((resolve, reject) => {\n      bufferOrStream.on(\"end\", () => {\n        hash.end();\n        resolve(`sha256:${hash.digest(\"hex\")}`);\n      });\n      bufferOrStream.on(\"error\", (err) => reject(err));\n    });\n  }\n}\n"]}